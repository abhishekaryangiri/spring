package com.quizapp.controller;

import com.quizapp.model.Question;
import com.quizapp.service.QuizService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/api/quiz")
public class QuizController {

    @Autowired
    private QuizService quizService;

    @PostMapping("/start/{userId}")
    public ResponseEntity<String> startQuiz(@PathVariable Long userId) {
        System.out.println("Received userId: " + userId);
        String response = quizService.startQuiz(userId);
        return ResponseEntity.ok(response);
    }


    @GetMapping("/question")
    public ResponseEntity<Question> getRandomQuestion() {
        Question question = quizService.getRandomQuestion();
        if (question == null) {
            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)
                     .body(new Question("No question found", "", "", "", "", 0));
        }
        return ResponseEntity.ok(question);
    }

    @GetMapping("/process")
    public ResponseEntity<String> processQuiz(@RequestParam(value = "questionId", required = false, defaultValue = "0") Long questionId) {
        if (questionId == null || questionId == 0) {
            return ResponseEntity.badRequest().body("questionId is missing or invalid");
        }
        return ResponseEntity.ok("Question processed: " + questionId);
    }

    @PostMapping("/submit/{userId}")
    public ResponseEntity<String> submitAnswer(
        @PathVariable Long userId, 
        @RequestParam Long questionId, 
        @RequestParam int selectedOption) {
            
        if (questionId == null || selectedOption == 0) {
            return ResponseEntity.badRequest().body("Invalid or missing questionId or selectedOption");
        }
        return ResponseEntity.ok(quizService.submitAnswer(userId, questionId, selectedOption));
    }

    
    @GetMapping("/result/{userId}")
    public String getQuizResult(@PathVariable Long userId) {
        return quizService.getQuizResult(userId);
    }
}